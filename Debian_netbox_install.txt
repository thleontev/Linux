=== Debian 12 ===
su -l
apt update -y
apt upgrade -y

apt install sudo
usermod -aG sudo user
! logout


sudo apt install -y net-tools
sudo apt -y install -y git gcc nginx redis supervisor python3 python3-dev python3-venv python3-pip python3-setuptools build-essential libxml2-dev libxslt1-dev libffi-dev graphviz libpq-dev libssl-dev zlib1g-dev vim
sudo apt install -y postgresql libpq-dev
sudo apt -y install postgresql-contrib postgresql-*-ip4r

sudo -u postgres psql
---
CREATE DATABASE netbox;
CREATE USER netbox WITH PASSWORD 'admin';
GRANT ALL PRIVILEGES ON DATABASE netbox TO netbox;
ALTER DATABASE netbox OWNER TO netbox;
\q
---

! verify
psql -U netbox -h localhost -W
netbox=> \conninfo
\q

sudo apt install redis-server -y
sudo systemctl is-enabled redis-server
sudo systemctl status redis-server
redis-cli ping

# sudo vi /etc/redis/redis.conf
# ---
# requirepass admin
# ---
#
# sudo systemctl restart redis-server
# redis-cli
# AUTH admin

sudo apt install -y git
cd /opt/
sudo git clone -b master https://github.com/netbox-community/netbox.git

sudo adduser --system --group netbox
sudo usermod -aG sudo netbox
sudo chown --recursive netbox /opt/netbox/

cd /opt/netbox/netbox/netbox/
sudo cp configuration_example.py configuration.py

python3 ../generate_secret_key.py
! save SECRET_KEY and add into file

sudo vi configuration.py
===
ALLOWED_HOSTS = ['*'] or ALLOWED_HOSTS = ['127.0.0.1', 'localhost']

DATABASE = {
    'NAME': 'netbox',               # Database name
    'USER': 'netbox',               # PostgreSQL username
    'PASSWORD': 'admin',            # PostgreSQL password
    'HOST': 'localhost',            # Database server
    'PORT': '',                     # Database port (leave blank for default)
    'CONN_MAX_AGE': 300,            # Max database connection age (seconds)
}

! seach in file and change !
SECRET_KEY = 'FHRO%lUpbGEL_)wfI4p-HE=7EL%VI&ylU&_ZXjP6*tSWV^2EfH'
=== 

sudo -u netbox /opt/netbox/upgrade.sh

source /opt/netbox/venv/bin/activate
cd /opt/netbox/netbox
python3 manage.py createsuperuser
admin/admin

! check
cd /opt/netbox/netbox
source /opt/netbox/venv/bin/activate
python3 manage.py runserver 0.0.0.0:8000 --insecure !  You should be greeted with the NetBox home page

source /opt/netbox/venv/bin/activate
cd /opt/netbox/netbox
pip3 install gunicorn

sudo cp /opt/netbox/contrib/gunicorn.py /opt/netbox/gunicorn.py

sudo cp -v /opt/netbox/contrib/*.service /etc/systemd/system/
sudo systemctl daemon-reload
sudo systemctl start netbox netbox-rq
sudo systemctl enable netbox netbox-rq
systemctl status netbox.service

sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
-keyout /etc/ssl/private/netbox.key \
-out /etc/ssl/certs/netbox.crt

sudo cp /opt/netbox/contrib/nginx.conf /etc/nginx/sites-available/netbox
sudo vi /etc/nginx/sites-available/netbox
---
 server {
    # CHANGE THIS TO YOUR SERVER'S NAME
    server_name 192.168.x.x;
---

deactivate
sudo rm /etc/nginx/sites-enabled/default
sudo ln -s /etc/nginx/sites-available/netbox /etc/nginx/sites-enabled/netbox
sudo systemctl restart nginx

systemctl status netbox
systemctl status nginx



!LDAP
apt install -y libldap2-dev libsasl2-dev libssl-dev
source /opt/netbox/venv/bin/activate
pip3 install django-auth-ldap
echo django-auth-ldap >> /opt/netbox/local_requirements.txt

cd /opt/netbox/netbox/netbox/
vi configuration.py
REMOTE_AUTH_BACKEND = 'netbox.authentication.LDAPBackend'

! debug
journalctl -xef -u netbox.service

